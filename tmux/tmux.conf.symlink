# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key C-b
set -g prefix C-a

# 1-based index
set -g base-index 1
set -g pane-base-index 1

# Renumber windows when a window is closed
set -g renumber-windows on

# History
set -g history-limit 102400

# Repeat time limit (ms)
set -g repeat-time 500

# 256-color terminal
set -g default-terminal "screen-256color"

# Key binding in the status line (bind-key :)
set -g status-keys emacs

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# UTF-8
set-window-option -g utf8 on

# Copy-mode
set-window-option -g mode-mouse on
set-window-option -g mode-keys vi

# Mouse
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Other pane sizes
set -g other-pane-height 30
set -g other-pane-width 80

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix a
bind -r C-a send-prefix

# prefix - and \
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

# Reload .tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Open new window with current path
bind c new-window -c "#{pane_current_path}"

bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-S-Left resize-pane -L 10
bind -n C-S-Right resize-pane -R 10
bind -n C-S-Down resize-pane -D 5
bind -n C-S-Up resize-pane -U 5

# Break a pane off
bind-key b break-pane -d

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Switch sessions
bind-key C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# No clue
bind-key C-b send-keys 'tat & exit' 'C-m'

# Kill session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set -g status-fg white
set -g status-bg black

set -sg escape-time 0

set -g status-left-length 50

set -g status-right " #(battery -t) #(date '+%a, %b %d - %I:%M') "
