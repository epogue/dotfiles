# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps

'.platform-darwin':
  'ctrl-cmd-.': 'key-binding-resolver:toggle'

'.platform-darwin atom-text-editor:not([mini])':
  'ctrl-e': 'editor:move-to-end-of-line'
  'cmd-.': 'rails-rspec:toggle-spec-file'

'atom-text-editor.vim-mode.insert-mode':
  'j': 'custom:wait-key-press'

'.tree-view':
  'space k': 'tree-view:toggle'

'atom-text-editor.vim-mode.command-mode':
  'space s': 'core:save'
  'space k': 'tree-view:toggle'

'.vim-mode.insert-mode:not(.mini)':
  'j k': 'vim-mode:activate-command-mode'
